<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Здесь будет храниться стандартный шаблон элемента списка контактов-->
    <Style TargetType="ListViewItem" x:Key="ContactCard">
        <!--Надо воспользоваться механизмом MultiTrigger, чтобы расписать обработку каждой из следующих ситуаций:
        1. Ни одна из кнопок не нажата - выделяется кнопка All, прочие кнопки сохранняют естественный цвет.
        2. Нажата кнопка All - результат, аналогичный пункту выше
        3. Одна из прочих кнопок нажата.
        -->
        
        <!--ContactColor один из параметров элемента списка Contacts. Он обозначает цвет заднего фона в списке контактов
        В каждый момент времени только один из элементов списка может иметь красный фон, прочие же кораловый.
        Изначально красным фоном обладает элемент под именем All, потом - тот элемент, на который мы кликаем.
        Чтобы этого добиться нужна функция, что распознает клик по некоторому элементу списка и сделает его задний фон красным,
        
        -->

        <Setter Property="Background" Value="{Binding UserColor,UpdateSourceTrigger=PropertyChanged}"/>

        <!--Используя свойство Template, можно определить шаблон напрямую в самом элементе-->
        <Setter Property="Template">
            <Setter.Value>

                <!--ControlTemplate предназначен для автономной единицы детализации реализации, которая невидима для внешних пользователей и объектов, включая стили.-->
                <ControlTemplate TargetType="ListViewItem">

                    <!--Чтобы мы могли из элемента, к которому применяется шаблон, влиять на свойства, 
                    определенные в этом шаблоне, 
                    нам надо использовать элемент TemplateBinding.
                    Он служит для установки в шаблоне привязки к свойствам элемента.-->

                    <!--Border Отображает границу, фон либо и то, и другое вокруг элемента.-->

                    <Border 
                        Background="{Binding UserColor,UpdateSourceTrigger=PropertyChanged}"
                        Height="50"
                        CornerRadius="4"
                            >
                        <StackPanel Orientation="Horizontal">
                            <Border 
                                Height="30" 
                                Width="30"
                                Background="Blue"
                                CornerRadius="25"
                                    />
                            <StackPanel Background="{Binding UserColor,UpdateSourceTrigger=PropertyChanged}">
                                
                                <Label Content="{Binding UserName}" 
                                       Foreground="Black"/>
                                
                                <Label Content="{Binding LastMessage}" 
                                       Foreground="Gray"
                                       FontSize="10"
                                       />
                            </StackPanel>
                            
                        </StackPanel> 
                    </Border> 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>